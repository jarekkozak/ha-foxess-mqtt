name: Docker Image CI - Build Latest from Main

# 1. Uruchomienie tylko dla push do gałęzi 'main'
on:
  push:
    branches: [ "main" ]
  # Jeśli nie chcesz, aby tagi Git (np. v1.0.0) również uruchamiały ten workflow,
  # możesz usunąć lub zakomentować poniższą sekcję 'tags':
  # tags:
  #   - 'v*.*.*'

jobs:
  build_and_push_latest: # Możesz zmienić nazwę zadania dla jasności
    runs-on: ubuntu-latest
    # Jeśli używasz Environment Secrets, zostaw poniższą linię:
    environment: dockerhub
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 2. Konfiguracja tagowania - tag 'latest' tylko dla gałęzi 'main'
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        # Wskaż nazwę Twojego repozytorium w Docker Hub
        images: ${{ secrets.DOCKERHUB_USERNAME }}/nazwa-twojego-repozytorium-dockerhub
        tags: |
          # Nadaj tag 'latest' tylko wtedy, gdy budujemy z gałęzi 'main'
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          # Jeśli chcesz również dodawać inne tagi (np. na podstawie tagów Git),
          # możesz dodać kolejne reguły tutaj, np.:
          # type=ref,event=tag

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        # Pushuj tylko jeśli to push do main (nie pull request)
        push: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        # Użyj tagów wygenerowanych przez krok 'meta' (będzie to 'latest' dla main)
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}